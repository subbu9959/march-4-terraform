# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f0cdc143-ee3e-4068-9d16-0f936079e2b4'
  imageRepository: 'demo'
  containerRegistry: 'myacr9123210.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/result/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

trigger:
- master

stages:
- stage: Test
  displayName: 'Test Stage'
  jobs:
  - job: Build_Test
    displayName: 'Build and Push Docker Image to Test Registry'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo 'Build and Push Docker Image to Test Registry'
      displayName: 'Building Docker Image'
    
    # Add steps to build and push Docker image to a test container registry
    # Use Docker@2 task to build and push the Docker image
  
    - script: echo 'Deploying to Test Environment'
      displayName: 'Deploying to Test'

    # Add steps to deploy your application to a test environment
    # Use Kubernetes@1 task or Helm task to deploy to AKS
    
- stage: Prod
  displayName: 'Production Stage'
  jobs:
  - job: Build_Prod
    displayName: 'Build and Push Docker Image to Production Registry'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo 'Build and Push Docker Image to Production Registry'
      displayName: 'Building Docker Image'
    
    # Add steps to build and push Docker image to a production container registry
    # Use Docker@2 task to build and push the Docker image
  
    - script: echo 'Deploying to Production Environment'
      displayName: 'Deploying to Production'

    # Add steps to deploy your application to a production environment
    # Use Kubernetes@1 task or Helm task to deploy to AKS